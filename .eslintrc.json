{
  "extends": [
    "@sudolabs-io/eslint-config-sudolabs/typescript-react",
    "@sudolabs-io/eslint-config-sudolabs/with/prettier",
    "plugin:import/recommended",
    "plugin:import/typescript"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["chakra-ui", "import"],
  "ignorePatterns": ["next.config.js", "*.config.js"],
  "settings": {
    "import/resolver": {
      "node": {
        "moduleDirectory": ["node_modules"],
        "extensions": [".js", ".jsx", ".ts", ".tsx", ".svg", ".d.ts"]
      },
      "typescript": {
        "project": "./tsconfig.json"
      }
    }
  },
  "rules": {
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "arrow-body-style": ["error", "as-needed"],
    "chakra-ui/props-order": "error",
    "chakra-ui/props-shorthand": "error",
    "chakra-ui/require-specific-component": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "enum",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["PascalCase"]
      },
      {
        "selector": "variable",
        "modifiers": ["const", "global"],
        "types": ["boolean", "string", "number"],
        "format": ["UPPER_CASE"]
      },
      {
        "selector": "variable",
        "modifiers": ["const", "destructured", "global"],
        "types": ["boolean", "string", "number"],
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      },
      {
        "selector": "variable",
        "modifiers": ["const", "destructured"],
        "types": ["boolean", "string", "number"],
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      },
      {
        "selector": "variable",
        "modifiers": ["const"],
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "modifiers": ["const"],
        "types": ["function"],
        "format": ["PascalCase", "camelCase"]
      },
      {
        "selector": "variable",
        "modifiers": ["const", "global"],
        "format": ["PascalCase", "camelCase"]
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "has", "does", "do", "are", "were", "can"]
      }
    ]
  }
}
