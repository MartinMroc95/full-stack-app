generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               String         @id @default(uuid())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  email            String         @unique
  image            String?
  role             Role           @default(USER)
  stripeCustomerId String?        @unique
  cars             Car[]
  invoices         Invoice[]
  subscriptions    Subscription[]
}

model Car {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  brand       String
  model       String
  year        Int
  mileage     Int
  fuelType    String
  enginePower Int
  price       Int
  description String?
  userId      String
  User        User     @relation(fields: [userId], references: [id])
}

model Subscription {
  id                     String    @id @default(uuid())
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  status                 String
  tier                   String
  stripePriceId          String
  stripeCustomerId       String?
  stripeSubscriptionId   String?   @unique
  stripeCurrentPeriodEnd DateTime?
  userId                 String
  invoices               Invoice[]
  user                   User      @relation(fields: [userId], references: [id])
}

model Invoice {
  id                    String        @id @default(uuid())
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  amount                Int
  currency              String        @default("eur")
  status                String
  stripeInvoiceId       String?
  stripePaymentIntentId String?
  subscriptionId        String?
  userId                String
  paidAt                DateTime?
  subscription          Subscription? @relation(fields: [subscriptionId], references: [id])
  user                  User          @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  USER
}
